name: Build

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: x86_64-unknown-linux-gnu
          toolchain: nightly
          default: true
          override: true

      - name: Build
        timeout-minutes: 120
        env:
          TARGET_TOOLCHAIN: x86_64-unknown-linux-musl
          OUPUT_FILENAME: rumo-linux
        run: |
          apt -y install libssl-dev musl-dev musl-tools
          rustup target add $TARGET_TOOLCHAIN
          cargo build --release --target=$TARGET_TOOLCHAIN
          mkdir -p ./build/release
          cp ./target/$TARGET_TOOLCHAIN/release/rumo ./build/release/$OUPUT_FILENAME
          cd ./build/release
          shasum -a 256 $OUPUT_FILENAME > $OUPUT_FILENAME.sha256

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/release/*
          prerelease: ${{ contains(github.ref, '-') }}
  
  build-windows:
    runs-on: windows-latest
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          default: true
          override: true

      - name: Build
        timeout-minutes: 120
        env:
          OUPUT_FILENAME: rumo-windows.exe
          OUPUT_FILENAME_SHA: rumo-windows.sha256
        run: |
          cargo build -r
          mkdir -p ./build/release
          cp ./target/release/rumo.exe ./build/release/$env:OUPUT_FILENAME
          cd ./build/release
          Get-FileHash $env:OUPUT_FILENAME | Format-List > $env:OUPUT_FILENAME_SHA

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/release/*
          prerelease: ${{ contains(github.ref, '-') }}
  
  build-macos:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          default: true
          override: true

      - name: Build
        timeout-minutes: 120
        env:
          OUPUT_FILENAME: rumo-macos
        run: |
          cargo build -r
          mkdir -p ./build/release
          cp ./target/release/rumo ./build/release/$OUPUT_FILENAME
          cd ./build/release
          shasum -a 256 $OUPUT_FILENAME > $OUPUT_FILENAME.sha256

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/release/*
          prerelease: ${{ contains(github.ref, '-') }}
